/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sma.tp3.views;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JLabel;
import sma.tp3.Bayes.Action;
import sma.tp3.Bayes.Hypothesis;
import sma.tp3.SMATP3;

/**
 *
 * @author Adrien
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SMA TP3");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);

        jButton1.setText("Action suivante");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Aléatoire");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Hypothèse la plus probable selon l'observateur : ");

        jLabel2.setText("Prochaine action la plus probable selon l'observateur : ");

        jLabel3.setForeground(java.awt.Color.red);
        jLabel3.setText("Aucune");

        jLabel4.setForeground(java.awt.Color.blue);
        jLabel4.setText("Aucune");

        jLabel5.setText("Action courante : ");

        jLabel6.setText("Aucune");

        jToggleButton2.setText("Exemple 2");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(33, 33, 33))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(181, 181, 181)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(0, 761, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 326, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        SMATP3.refresh(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        SMATP3.random();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SMATP3.reset();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        SMATP3.toggleExample1();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    private List<HypothesisPanel> hypotheses = new ArrayList<>();
    
    public void addHyposthesis(Hypothesis hypothesis) {
        HypothesisPanel h = new HypothesisPanel();
        h.setHypothesis(hypothesis);
        hypotheses.add(h);
        jPanel1.add(h);
    }
    
    private List<ActionPanel> actions = new ArrayList<>();
    
    public void addAction(Action action) {
        ActionPanel a = new ActionPanel();
        a.setAction(action);
        actions.add(a);
        jPanel2.add(a);
    }
    
    public void refresh(){
        for(ActionPanel actionPanel : actions){
            actionPanel.refresh();
        }
        for(HypothesisPanel hypothesisPanel : hypotheses){
            hypothesisPanel.refresh();
        }
    }
    
    public void emptyTextArea(){
        jTextArea1.setText("");
    }
    
    private List<ProbabilityLine> lines = new ArrayList<>();
    
    public void addProbability(Hypothesis hypothesis, Action action, float probability, Color color) {
        HypothesisPanel panel = getHypothesisPanel(hypothesis);
        ActionPanel panel2 = getActionPanel(action);
        if (panel != null && panel2 != null) {
            ProbabilityLine line = new ProbabilityLine(probability, panel, panel2);
            line.setColor(color);
            lines.add(line);
        }
        drawLines(getGraphics());
    }
    
    public void setActivated(Action action, boolean activated) {
        ActionPanel p = getActionPanel(action);
        if (p != null) {
            p.setActivated(activated);
        }
    }
    
    public void setCheckBoxes(){
        for(ActionPanel actionPanel : actions){
            actionPanel.setActivated(false);
        }
    }
    
    private HypothesisPanel getHypothesisPanel(Hypothesis hypothesis) {
        HypothesisPanel panel = null;
        for (HypothesisPanel hp : hypotheses) {
            if (hp.getHypothesis().equals(hypothesis)) {
                panel = hp;
                break;
            }
        }
        return panel;
    }
    
    public void setHyposthesisProbabilities(List<Action> actions) {
        for (HypothesisPanel hypothesisPanel : hypotheses) {
            hypothesisPanel.setProbability(actions, hypothesisPanel.getHypothesis().getIntermediateProbability());
        }
    }
    
    public void setHighlighted(Action action, Hypothesis hypothesis){
        ActionPanel actionPanel = getActionPanel(action);
        HypothesisPanel hypothesisPanel = getHypothesisPanel(hypothesis);
        refresh();
        if(actionPanel != null){
            actionPanel.highlight(Color.BLUE);
        }
        if(hypothesisPanel != null){
            hypothesisPanel.highlight(Color.RED);
        }
    }
    
    private ActionPanel getActionPanel(Action action) {
        ActionPanel panel = null;
        for (ActionPanel ap : actions) {
            if (ap.getAction().equals(action)) {
                panel = ap;
                break;
            }
        }
        return panel;
    }
    
    public void reset(){
        actions = new ArrayList<>();
        hypotheses = new ArrayList<>();
        lines = new ArrayList<>();
        emptyTextArea();
        jPanel1.removeAll();
        jPanel2.removeAll();
    }
    
    void drawLines(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        
        Object obj = RenderingHints.VALUE_ANTIALIAS_ON;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, obj);
        
        float[] dashingPattern2 = {10f, 4f};
        Stroke stroke2 = new BasicStroke(4f, BasicStroke.CAP_BUTT,
                BasicStroke.JOIN_MITER, 1.0f, dashingPattern2, 0.0f);
        
        g2d.setStroke(stroke2);
        
        JLabel j = new JLabel("0.1");
        Random r = new Random();
        for (ProbabilityLine line : lines) {
            g2d.setColor(line.getColor());
            g2d.draw(new Line2D.Double(line.getStart().getLocation().getX() + 120, line.getStart().getParent().getLocation().getY() + 195,
                    line.getEnd().getLocation().getX() + 120, line.getEnd().getParent().getLocation().getY() + 35));
            float offset = (float)((line.getStart().getLocation().getX() + 120) - (line.getEnd().getLocation().getX() + 120))/8;
            offset = offset > 5 ? offset : 5;
            g2d.drawString(String.valueOf(line.getProbability()), (float) ((line.getStart().getLocation().getX() + 120 + line.getEnd().getLocation().getX() + 120) / 2) + offset,
                    (float) (((line.getStart().getParent().getLocation().getY() + 195 + line.getEnd().getParent().getLocation().getY() + 35) / 2) + r.nextInt(15)));
        }
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        drawLines(g);
    }
    
    public void addMessage(String text) {
        jTextArea1.append(text + "\n");
    }
    
    public void setMostProbableActionLabel(Action action){
        jLabel4.setText(action != null ? action.toString() : "Aucune");
    }
    
    public void setMostProbableHypothesisLabel(Hypothesis hypothesis){
        jLabel3.setText(hypothesis != null ? hypothesis.toString() : "Aucune");
    }
    
    public void setActionLabel(Action action){
        jLabel6.setText(action != null ? action.toString() : "Aucune");
    }
    
    public void setSizeRefresh(){
        Random r = new Random();
        setSize(getWidth() + (r.nextBoolean() ? 1 : -1), getHeight() + (r.nextBoolean() ? 1 : -1));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
